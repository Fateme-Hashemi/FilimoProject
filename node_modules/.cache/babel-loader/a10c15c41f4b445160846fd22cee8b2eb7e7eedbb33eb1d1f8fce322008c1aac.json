{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elahe\\\\Downloads\\\\Compressed\\\\Archive (15)\\\\src\\\\components\\\\Category.js\";\nimport React from 'react';\nimport styles from \"../styles/Category.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Category = ({\n  onGenreChange,\n  selectedGenre\n}) => {\n  let array = [{\n    key: \"درام\",\n    value: \"drama\"\n  }, {\n    key: \"کمدی\",\n    value: \"comedy\"\n  }, {\n    key: \"اکشن\",\n    value: \"action\"\n  }, {\n    key: \"علمی-تخیلی\",\n    value: \"sci-fi\"\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.catContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.col,\n        children: \"  \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), array.map((el, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n            value: el.value,\n            checked: selectedGenre.includes(el.value),\n            onChange: e => onGenreChange(e.target.value),\n            type: \"checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\" \", el.key, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 32\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_c = Category;\nexport default Category;\nvar _c;\n$RefreshReg$(_c, \"Category\");","map":{"version":3,"names":["React","styles","jsxDEV","_jsxDEV","Fragment","_Fragment","Category","onGenreChange","selectedGenre","array","key","value","children","className","catContainer","col","fileName","_jsxFileName","lineNumber","columnNumber","map","el","index","checked","includes","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/Elahe/Downloads/Compressed/Archive (15)/src/components/Category.js"],"sourcesContent":["import React from 'react';\n\n\nimport styles from \"../styles/Category.module.css\";\n\n\n\nconst Category = ({ onGenreChange, selectedGenre }) => {\n    let array = [\n        {\n            key: \"درام\", value: \"drama\"\n        },\n        {\n            key: \"کمدی\", value: \"comedy\"\n        },\n        {\n            key: \"اکشن\", value: \"action\"\n        },\n\n        {\n            key: \"علمی-تخیلی\", value: \"sci-fi\"\n        },\n\n\n    ]\n\n    return (\n        <>\n            <div className={styles.catContainer}>\n                <div className={styles.col}>  </div>\n\n\n\n\n                {\n                    array.map((el, index) => {\n\n                        return <div> <input\n                            value={el.value}\n                            checked={selectedGenre.includes(el.value)}\n                            onChange={(e) => onGenreChange(e.target.value)}\n                            type='checkbox'\n\n                        />\n                            <span> {el.key} </span>\n                        </div>\n                    })\n                }\n            </div>\n\n\n            {/* <div>\n                <input \n                        value={selectedGenre}\n                        onChange={onGenreChange}\n                       name='اکشن'\n                       type='checkbox'\n                  \n                       />\n                <span>  اکشن</span>\n            </div>\n\n            <div>\n                <input \n                        value={selectedGenre}\n                        onChange={onGenreChange}\n                       name='درام'\n                       type='checkbox'\n                  \n                       />\n                <span> درام </span>\n            </div>\n            <div>\n                <input \n                       value={selectedGenre}\n                       onChange={onGenreChange}\n                       name='علمی-تخیلی'\n                       type='checkbox'\n                  \n                       />\n                <span>  علمی-تخیلی</span>\n            </div>\n            </div> */}\n\n\n\n\n\n\n\n\n        </>\n    );\n};\n\nexport default Category;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAGzB,OAAOC,MAAM,MAAM,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAInD,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,aAAa;EAAEC;AAAc,CAAC,KAAK;EACnD,IAAIC,KAAK,GAAG,CACR;IACIC,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EACxB,CAAC,EACD;IACID,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EACxB,CAAC,EACD;IACID,GAAG,EAAE,MAAM;IAAEC,KAAK,EAAE;EACxB,CAAC,EAED;IACID,GAAG,EAAE,YAAY;IAAEC,KAAK,EAAE;EAC9B,CAAC,CAGJ;EAED,oBACIR,OAAA,CAAAE,SAAA;IAAAO,QAAA,eACIT,OAAA;MAAKU,SAAS,EAAEZ,MAAM,CAACa,YAAa;MAAAF,QAAA,gBAChCT,OAAA;QAAKU,SAAS,EAAEZ,MAAM,CAACc,GAAI;QAAAH,QAAA,EAAC;MAAE;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,EAMhCV,KAAK,CAACW,GAAG,CAAC,CAACC,EAAE,EAAEC,KAAK,KAAK;QAErB,oBAAOnB,OAAA;UAAAS,QAAA,GAAK,GAAC,eAAAT,OAAA;YACTQ,KAAK,EAAEU,EAAE,CAACV,KAAM;YAChBY,OAAO,EAAEf,aAAa,CAACgB,QAAQ,CAACH,EAAE,CAACV,KAAK,CAAE;YAC1Cc,QAAQ,EAAGC,CAAC,IAAKnB,aAAa,CAACmB,CAAC,CAACC,MAAM,CAAChB,KAAK,CAAE;YAC/CiB,IAAI,EAAC;UAAU;YAAAZ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAElB,CAAC,eACEhB,OAAA;YAAAS,QAAA,GAAM,GAAC,EAACS,EAAE,CAACX,GAAG,EAAC,GAAC;UAAA;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACtB,CAAC;MACV,CAAC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEL;EAAC,gBA2CR,CAAC;AAEX,CAAC;AAACU,EAAA,GAtFIvB,QAAQ;AAwFd,eAAeA,QAAQ;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}