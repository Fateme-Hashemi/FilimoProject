{"ast":null,"code":"import _toConsumableArray from\"C:/Users/Elahe/Desktop/filimotest/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"C:/Users/Elahe/Desktop/filimotest/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import React,{useState,useEffect}from'react';import queryString from'query-string';import{useHistory,useLocation}from'react-router-dom';//style\nimport styles from\"../styles/Home.module.css\";//images\nimport banner from\"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";//data\nimport movieData from\"../data/data.json\";//components\nimport Cards from'./Cards';import Category from'./Category';import Rate from\"./Rate\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var Home=function Home(_ref){var handleChange=_ref.handleChange;var history=useHistory();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),selectedGenre=_useState2[0],setSelectedGenre=_useState2[1];var _useState3=useState(null),_useState4=_slicedToArray(_useState3,2),selectedRating=_useState4[0],setSelectedRating=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),selectedAscending=_useState6[0],setSelectedAscending=_useState6[1];useEffect(function(){var storedGenre=localStorage.getItem('selectedGenre');var storedRating=localStorage.getItem('selectedRating');var storedAscending=localStorage.getItem('selectedAscending');if(storedGenre){setSelectedGenre(JSON.parse(storedGenre));}if(storedRating){setSelectedRating(JSON.parse(storedRating));}if(storedAscending){setSelectedAscending(JSON.parse(storedAscending));}},[]);//QueryStringAndLocalStorage\nuseEffect(function(){var queryParams=new URLSearchParams();if(selectedGenre.length>0){queryParams.set('selectedGenre',selectedGenre.join(','));}if(selectedRating!==null){if(selectedAscending){queryParams.set('sorts[rating]','asc');}else{queryParams.set('sorts[rating]','desc');}}var queryString=queryParams.toString();if(queryString){history.push({search:queryString});}else{history.push({search:''});// This line removes the query string\n}localStorage.setItem('selectedGenre',JSON.stringify(selectedGenre));localStorage.setItem('selectedRating',JSON.stringify(selectedRating));localStorage.setItem('selectedAscending',JSON.stringify(selectedAscending));},[selectedGenre,selectedRating,selectedAscending,history]);//filterByGenre\nvar handleGenreChange=function handleGenreChange(value){if(selectedGenre&&selectedGenre.includes(value)){setSelectedGenre(selectedGenre.filter(function(i){return i!==value;}));}else{setSelectedGenre([].concat(_toConsumableArray(selectedGenre),[value]));}};//lowestSorting\nvar handleRatingChange=function handleRatingChange(value){setSelectedRating(value===selectedRating?null:value);};//highestSorting\nvar handleAscendingChange=function handleAscendingChange(value){setSelectedAscending(value);};//filteringAndSorting\nvar filterMovies=movieData.filter(function(movie){return!selectedGenre.length||movie.categories.findIndex(function(cat){return selectedGenre.includes(cat.title_en);})!==-1;}).sort(function(a,b){if(selectedRating==='descending'){return a.rate_avrage-b.rate_avrage;}else if(selectedRating==='ascending'){return b.rate_avrage-a.rate_avrage;}else{return 0;}});return/*#__PURE__*/_jsx(_Fragment,{children:/*#__PURE__*/_jsxs(\"div\",{className:styles.container,children:[/*#__PURE__*/_jsx(\"img\",{className:styles.banner,src:banner}),/*#__PURE__*/_jsxs(\"div\",{className:styles.filtercontainer,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Category,{selectedGenre:selectedGenre,onGenreChange:handleGenreChange})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Rate,{selectedRating:selectedRating,onRatingChange:handleRatingChange})})]}),/*#__PURE__*/_jsx(Cards,{movies:filterMovies,selectedGenre:selectedGenre,selectedRating:selectedRating,setSelectedAscending:setSelectedAscending,selectedAscending:selectedAscending})]})});};export default Home;","map":{"version":3,"names":["React","useState","useEffect","queryString","useHistory","useLocation","styles","banner","movieData","Cards","Category","Rate","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","Home","_ref","handleChange","history","_useState","_useState2","_slicedToArray","selectedGenre","setSelectedGenre","_useState3","_useState4","selectedRating","setSelectedRating","_useState5","_useState6","selectedAscending","setSelectedAscending","storedGenre","localStorage","getItem","storedRating","storedAscending","JSON","parse","queryParams","URLSearchParams","length","set","join","toString","push","search","setItem","stringify","handleGenreChange","value","includes","filter","i","concat","_toConsumableArray","handleRatingChange","handleAscendingChange","filterMovies","movie","categories","findIndex","cat","title_en","sort","a","b","rate_avrage","children","className","container","src","filtercontainer","onGenreChange","onRatingChange","movies"],"sources":["C:/Users/Elahe/Desktop/filimotest/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n//style\nimport styles from \"../styles/Home.module.css\";\n\n//images\nimport banner from \"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";\n\n//data\nimport movieData from \"../data/data.json\";\n\n//components\nimport Cards from './Cards';\nimport Category from './Category';\nimport Rate from \"./Rate\";\n\n\n\nconst Home = ({ handleChange }) => {\n    let history = useHistory();\n\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const [selectedRating, setSelectedRating] = useState(null);\n    const [selectedAscending, setSelectedAscending] = useState(false);\n\n\n\n    useEffect(() => {\n        const storedGenre = localStorage.getItem('selectedGenre');\n        const storedRating = localStorage.getItem('selectedRating');\n        const storedAscending = localStorage.getItem('selectedAscending');\n    \n        if (storedGenre) {\n          setSelectedGenre(JSON.parse(storedGenre));\n        }\n    \n        if (storedRating) {\n          setSelectedRating(JSON.parse(storedRating));\n        }\n    \n        if (storedAscending) {\n          setSelectedAscending(JSON.parse(storedAscending));\n        }\n      }, []);\n    \n      //QueryStringAndLocalStorage\n      useEffect(() => {\n        const queryParams = new URLSearchParams();\n      \n        if (selectedGenre.length > 0) {\n          queryParams.set('selectedGenre', selectedGenre.join(','));\n        }\n      \n        if (selectedRating !== null) {\n          if (selectedAscending) {\n            queryParams.set('sorts[rating]', 'asc');\n          } else {\n            queryParams.set('sorts[rating]', 'desc');\n          }\n        }\n      \n        const queryString = queryParams.toString();\n      \n        if (queryString) {\n          history.push({ search: queryString });\n        } else {\n          history.push({ search: '' }); // This line removes the query string\n        }\n      \n        localStorage.setItem('selectedGenre', JSON.stringify(selectedGenre));\n        localStorage.setItem('selectedRating', JSON.stringify(selectedRating));\n        localStorage.setItem('selectedAscending', JSON.stringify(selectedAscending));\n      }, [selectedGenre, selectedRating, selectedAscending, history]);\n      \n\n      //filterByGenre\n      const handleGenreChange = (value) => {\n        if (selectedGenre && selectedGenre.includes(value)) {\n          setSelectedGenre(selectedGenre.filter((i) => i !== value));\n        } else {\n          setSelectedGenre([...selectedGenre, value]);\n        }\n      };\n\n      \n\n    //lowestSorting\n    const handleRatingChange = (value) => {\n      setSelectedRating(value === selectedRating ? null : value);\n    };\n    \n\n    //highestSorting\n      const handleAscendingChange = (value) => {\n        setSelectedAscending(value);\n      };\n\n\n //filteringAndSorting\n    const filterMovies = movieData\n    .filter(\n      (movie) =>\n        !selectedGenre.length ||\n        movie.categories.findIndex((cat) => selectedGenre.includes(cat.title_en)) !== -1\n    )\n    .sort((a, b) => {\n      if (selectedRating === 'descending') {\n        return a.rate_avrage - b.rate_avrage;\n      } else if (selectedRating === 'ascending') {\n        return b.rate_avrage - a.rate_avrage;\n      } else {\n     \n        return 0;\n      }\n    });\n\n   \n    return (\n        <>\n\n\n            <div className={styles.container}>\n                \n                <img className={styles.banner} src={banner} />\n                <div className={styles.filtercontainer}>\n\n                  <div >\n                    <Category \n                     selectedGenre={selectedGenre} \n                     onGenreChange={handleGenreChange}\n                      />\n               </div>\n  \n\n                 <div>\n                 <Rate\n                       selectedRating={selectedRating}\n                       onRatingChange={handleRatingChange}\n                   />               \n                 </div>\n\n               </div>\n              \n\n                <Cards\n                    movies={filterMovies}\n                    selectedGenre={selectedGenre}\n                    selectedRating={selectedRating}\n                    setSelectedAscending={setSelectedAscending}\n                    selectedAscending={selectedAscending}\n\n                />\n            </div>\n\n\n        </>\n    );\n};\n\nexport default Home;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}