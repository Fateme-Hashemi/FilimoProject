{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elahe\\\\Downloads\\\\Compressed\\\\Archive (15)\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n\n//style\nimport styles from \"../styles/Home.module.css\";\n\n//images\nimport banner from \"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";\n\n//data\nimport movieData from \"../data/data.json\";\n\n//components\nimport Filter from './Filter';\nimport Cards from './Cards';\nimport Movie from './Movie';\nimport Category from './Category';\nimport Rate from \"./Rate\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  handleChange\n}) => {\n  _s();\n  let history = useHistory();\n  const [selectedGenre, setSelectedGenre] = useState([]);\n  const [selectedRating, setSelectedRating] = useState('ascending');\n  const [selectedAscending, setSelectedAscending] = useState(false);\n\n  // useEffect(() => {\n  //     const sortedGenre = localStorage.getItem('selectedGenre');\n  //     const sortedRating = localStorage.getItem('selectedRating');\n  //     const sortedAscending = localStorage.getItem('selectedAscending');\n\n  //     if (sortedGenre) {\n  //         setSelectedGenre(sortedGenre);\n  //     }\n  //     if (sortedRating) {\n  //         setSelectedRating(sortedRating);\n  //     }\n  //     if (sortedAscending) {\n  //         setSelectedAscending(sortedAscending);\n  //     }\n  // }, []);\n\n  // useEffect(() => {\n  //     localStorage.setItem('selectedGenre', selectedGenre);\n  //     localStorage.setItem('selectedRating', selectedRating);\n  //     localStorage.setItem('selectedAscending', selectedAscending);\n  // }, [selectedGenre, selectedRating, selectedAscending]);\n\n  useEffect(() => {\n    if (window.location.search !== \"\") {\n      if (window.location.search.split(\"?\")[1].includes(\"sorts[rating]=desc\")) {\n        setSelectedRating(true);\n      }\n    }\n  }, [window.location.search]);\n  const handleGenreChange = value => {\n    if (selectedGenre && selectedGenre.includes(value)) {\n      setSelectedGenre(selectedGenre.filter(i => i !== value));\n    } else {\n      setSelectedGenre([...selectedGenre, value]);\n    }\n  };\n  const handleRatingChange = value => {\n    setSelectedRating(value);\n\n    // if (Boolean(event.target.value)) {\n    //     history.push({ search: \"sorts[rating]=desc\" })\n    // }\n  };\n\n  const handleAscendingChange = event => {\n    setSelectedAscending(!event.target.value);\n    if (Boolean(event.target.value)) {\n      history.push({\n        search: \"sorts[rating]=asc\"\n      });\n    }\n  };\n\n  // const filterMovies = movieData.filter((movie)=> {\n  //     if (selectedGenre && movie.categories.title !== selectedGenre) { //categories.title????\n  //         return false;\n  //     }\n  //     if (selectedRating && movie.rate_avrage < selectedRating) {\n  //         return false;\n  //     }\n  //     if (selectedAscending && movie.rate_avrage > selectedAscending) {\n  //         return false\n  //     }\n  //     return true;\n  // })\n  const filterMovies = movieData.filter(movie => !selectedGenre.length || movie.categories.findIndex(cat => selectedGenre.includes(cat.title_en)) !== -1).sort((a, b) => selectedRating === 'descending' ? a.rate_avrage - b.rate_avrage : b.rate_avrage - a.rate_avrage);\n\n  // const filterMovies = selectedGenre || selectedRating || selectedAscending\n  //     ? movieData.filter((movie) => {\n  //         if (selectedGenre && movie.categories.title_en !== selectedGenre) {\n  //             return false;\n  //         }\n  //         if (selectedRating && movie.rate_avrage < selectedRating) {\n  //             return false;\n  //         }\n  //         if (selectedAscending && movie.rate_avrage > selectedAscending) {\n  //             return false\n  //         }\n  //         return true;\n  //     })\n  //     : movieData;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.banner,\n        src: banner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filtercontainer,\n        children: [/*#__PURE__*/_jsxDEV(Category, {\n          selectedGenre: selectedGenre,\n          onGenreChange: handleGenreChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Rate, {\n          selectedRating: selectedRating,\n          onRatingChange: handleRatingChange\n          // handleAscendingChange={handleAscendingChange}\n          // selectedAscending={selectedAscending}\n          // setSelectedAscending={setSelectedAscending}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        movies: filterMovies,\n        selectedGenre: selectedGenre,\n        selectedRating: selectedRating,\n        setSelectedAscending: setSelectedAscending,\n        selectedAscending: selectedAscending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"hIxc5PtvC2U1qJaP4ZUyGo4P7eU=\", false, function () {\n  return [useHistory];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","styles","banner","movieData","Filter","Cards","Movie","Category","Rate","useHistory","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","handleChange","_s","history","selectedGenre","setSelectedGenre","selectedRating","setSelectedRating","selectedAscending","setSelectedAscending","window","location","search","split","includes","handleGenreChange","value","filter","i","handleRatingChange","handleAscendingChange","event","target","Boolean","push","filterMovies","movie","length","categories","findIndex","cat","title_en","sort","a","b","rate_avrage","children","className","container","src","fileName","_jsxFileName","lineNumber","columnNumber","filtercontainer","onGenreChange","onRatingChange","movies","_c","$RefreshReg$"],"sources":["C:/Users/Elahe/Downloads/Compressed/Archive (15)/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\n//style\nimport styles from \"../styles/Home.module.css\";\n\n//images\nimport banner from \"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";\n\n//data\nimport movieData from \"../data/data.json\";\n\n//components\nimport Filter from './Filter';\nimport Cards from './Cards';\nimport Movie from './Movie';\nimport Category from './Category';\nimport Rate from \"./Rate\";\nimport { useHistory } from \"react-router-dom\";\n\n\nconst Home = ({ handleChange }) => {\n    let history = useHistory();\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const [selectedRating, setSelectedRating] = useState('ascending');\n    const [selectedAscending, setSelectedAscending] = useState(false);\n\n    // useEffect(() => {\n    //     const sortedGenre = localStorage.getItem('selectedGenre');\n    //     const sortedRating = localStorage.getItem('selectedRating');\n    //     const sortedAscending = localStorage.getItem('selectedAscending');\n\n    //     if (sortedGenre) {\n    //         setSelectedGenre(sortedGenre);\n    //     }\n    //     if (sortedRating) {\n    //         setSelectedRating(sortedRating);\n    //     }\n    //     if (sortedAscending) {\n    //         setSelectedAscending(sortedAscending);\n    //     }\n    // }, []);\n\n    // useEffect(() => {\n    //     localStorage.setItem('selectedGenre', selectedGenre);\n    //     localStorage.setItem('selectedRating', selectedRating);\n    //     localStorage.setItem('selectedAscending', selectedAscending);\n    // }, [selectedGenre, selectedRating, selectedAscending]);\n\n\n    useEffect(() => {\n\n        if (window.location.search !== \"\") {\n            if (window.location.search.split(\"?\")[1].includes(\"sorts[rating]=desc\")) {\n                setSelectedRating(true)\n            }\n        }\n    }, [window.location.search]);\n\n\n    const handleGenreChange = (value) => {\n        if (selectedGenre && selectedGenre.includes(value)) {\n            setSelectedGenre(selectedGenre.filter((i) => i !== value))\n        } else {\n            setSelectedGenre([...selectedGenre, value])\n        }\n    }\n    const handleRatingChange = (value) => {\n\n        setSelectedRating(value);\n\n        // if (Boolean(event.target.value)) {\n        //     history.push({ search: \"sorts[rating]=desc\" })\n        // }\n    }\n\n    const handleAscendingChange = (event) => {\n        setSelectedAscending(!event.target.value);\n\n        if (Boolean(event.target.value)) {\n            history.push({ search: \"sorts[rating]=asc\" });\n        }\n    }\n\n\n    // const filterMovies = movieData.filter((movie)=> {\n    //     if (selectedGenre && movie.categories.title !== selectedGenre) { //categories.title????\n    //         return false;\n    //     }\n    //     if (selectedRating && movie.rate_avrage < selectedRating) {\n    //         return false;\n    //     }\n    //     if (selectedAscending && movie.rate_avrage > selectedAscending) {\n    //         return false\n    //     }\n    //     return true;\n    // })\n    const filterMovies =  movieData.filter((movie) => !selectedGenre.length || \n     (movie.categories.findIndex(cat=> selectedGenre.includes(cat.title_en)) !== -1)).sort((a,b) =>  (selectedRating === 'descending') ? \n      a.rate_avrage - b.rate_avrage : \n      b.rate_avrage - a.rate_avrage) ;\n\n\n \n    // const filterMovies = selectedGenre || selectedRating || selectedAscending\n    //     ? movieData.filter((movie) => {\n    //         if (selectedGenre && movie.categories.title_en !== selectedGenre) {\n    //             return false;\n    //         }\n    //         if (selectedRating && movie.rate_avrage < selectedRating) {\n    //             return false;\n    //         }\n    //         if (selectedAscending && movie.rate_avrage > selectedAscending) {\n    //             return false\n    //         }\n    //         return true;\n    //     })\n    //     : movieData;\n\n\n    return (\n        <>\n\n\n            <div className={styles.container}>\n                <img className={styles.banner} src={banner} />\n\n                <div className={styles.filtercontainer}>\n                    <Category selectedGenre={selectedGenre} onGenreChange={handleGenreChange} />\n\n                    <Rate\n                        selectedRating={selectedRating}\n                        onRatingChange={handleRatingChange}\n                        // handleAscendingChange={handleAscendingChange}\n                        // selectedAscending={selectedAscending}\n                        // setSelectedAscending={setSelectedAscending}\n                    />\n\n                </div>\n\n                <Cards\n                    movies={filterMovies}\n                    selectedGenre={selectedGenre}\n                    selectedRating={selectedRating}\n                    setSelectedAscending={setSelectedAscending}\n                    selectedAscending={selectedAscending}\n\n                />\n            </div>\n\n\n        </>\n    );\n};\n\nexport default Home;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}