{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Elahe\\\\Desktop\\\\filimotestCopy\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n//style\nimport styles from \"../styles/Home.module.css\";\n\n//images\nimport banner from \"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";\n\n//data\nimport movieData from \"../data/data.json\";\n\n//components\nimport Cards from './Cards';\nimport Category from './Category';\nimport Rate from \"./Rate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Home = ({\n  handleChange\n}) => {\n  _s();\n  let history = useHistory();\n  const [selectedGenre, setSelectedGenre] = useState([]);\n  const [selectedRating, setSelectedRating] = useState(null);\n  const [selectedAscending, setSelectedAscending] = useState(false);\n  useEffect(() => {\n    const storedGenre = localStorage.getItem('selectedGenre');\n    const storedRating = localStorage.getItem('selectedRating');\n    const storedAscending = localStorage.getItem('selectedAscending');\n    if (storedGenre) {\n      setSelectedGenre(JSON.parse(storedGenre));\n    }\n    if (storedRating) {\n      setSelectedRating(JSON.parse(storedRating));\n    }\n    if (storedAscending) {\n      setSelectedAscending(JSON.parse(storedAscending));\n    }\n  }, []);\n\n  //QueryStringAndLocalStorage\n  useEffect(() => {\n    const queryParams = new URLSearchParams();\n    if (selectedGenre.length > 0) {\n      queryParams.set('selectedGenre', selectedGenre.join(','));\n    }\n    if (selectedRating !== null) {\n      if (selectedAscending) {\n        queryParams.set('sorts[rating]', 'asc');\n      } else {\n        queryParams.set('sorts[rating]', 'desc');\n      }\n    }\n    const queryString = queryParams.toString();\n    if (queryString) {\n      history.push({\n        search: queryString\n      });\n    } else {\n      history.push({\n        search: ''\n      }); // This line removes the query string\n    }\n\n    localStorage.setItem('selectedGenre', JSON.stringify(selectedGenre));\n    localStorage.setItem('selectedRating', JSON.stringify(selectedRating));\n    localStorage.setItem('selectedAscending', JSON.stringify(selectedAscending));\n  }, [selectedGenre, selectedRating, selectedAscending, history]);\n\n  //filterByGenre\n  const handleGenreChange = value => {\n    if (selectedGenre && selectedGenre.includes(value)) {\n      setSelectedGenre(selectedGenre.filter(i => i !== value));\n    } else {\n      setSelectedGenre([...selectedGenre, value]);\n    }\n  };\n\n  //lowestSorting\n  const handleRatingChange = value => {\n    setSelectedRating(value === selectedRating ? null : value);\n  };\n\n  //highestSorting\n  const handleAscendingChange = value => {\n    setSelectedAscending(value);\n  };\n\n  //filteringAndSorting\n  const filterMovies = movieData.filter(movie => !selectedGenre.length || movie.categories.findIndex(cat => selectedGenre.includes(cat.title_en)) !== -1).sort((a, b) => {\n    if (selectedRating === 'descending') {\n      return a.rate_avrage - b.rate_avrage;\n    } else if (selectedRating === 'ascending') {\n      return b.rate_avrage - a.rate_avrage;\n    } else {\n      return 0;\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.container,\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: styles.banner,\n        src: banner\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.filtercontainer,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Category, {\n            selectedGenre: selectedGenre,\n            onGenreChange: handleGenreChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Rate, {\n            selectedRating: selectedRating,\n            onRatingChange: handleRatingChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Cards, {\n        movies: filterMovies,\n        selectedGenre: selectedGenre,\n        selectedRating: selectedRating,\n        setSelectedAscending: setSelectedAscending,\n        selectedAscending: selectedAscending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(Home, \"uCSoQUg23dhCa7CYjj9ZQFUB6TA=\", false, function () {\n  return [useHistory];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useState","useEffect","queryString","useHistory","useLocation","styles","banner","movieData","Cards","Category","Rate","jsxDEV","_jsxDEV","Fragment","_Fragment","Home","handleChange","_s","history","selectedGenre","setSelectedGenre","selectedRating","setSelectedRating","selectedAscending","setSelectedAscending","storedGenre","localStorage","getItem","storedRating","storedAscending","JSON","parse","queryParams","URLSearchParams","length","set","join","toString","push","search","setItem","stringify","handleGenreChange","value","includes","filter","i","handleRatingChange","handleAscendingChange","filterMovies","movie","categories","findIndex","cat","title_en","sort","a","b","rate_avrage","children","className","container","src","fileName","_jsxFileName","lineNumber","columnNumber","filtercontainer","onGenreChange","onRatingChange","movies","_c","$RefreshReg$"],"sources":["C:/Users/Elahe/Desktop/filimotestCopy/src/components/Home.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport queryString from 'query-string';\nimport { useHistory, useLocation } from 'react-router-dom';\n//style\nimport styles from \"../styles/Home.module.css\";\n\n//images\nimport banner from \"../img/Collage-tile-tiles-music-rap-hip-hop-wallpaper-1920x1080- 1.png\";\n\n//data\nimport movieData from \"../data/data.json\";\n\n//components\nimport Cards from './Cards';\nimport Category from './Category';\nimport Rate from \"./Rate\";\n\n\n\nconst Home = ({ handleChange }) => {\n    let history = useHistory();\n\n    const [selectedGenre, setSelectedGenre] = useState([]);\n    const [selectedRating, setSelectedRating] = useState(null);\n    const [selectedAscending, setSelectedAscending] = useState(false);\n\n\n\n    useEffect(() => {\n        const storedGenre = localStorage.getItem('selectedGenre');\n        const storedRating = localStorage.getItem('selectedRating');\n        const storedAscending = localStorage.getItem('selectedAscending');\n    \n        if (storedGenre) {\n          setSelectedGenre(JSON.parse(storedGenre));\n        }\n    \n        if (storedRating) {\n          setSelectedRating(JSON.parse(storedRating));\n        }\n    \n        if (storedAscending) {\n          setSelectedAscending(JSON.parse(storedAscending));\n        }\n      }, []);\n    \n      //QueryStringAndLocalStorage\n      useEffect(() => {\n        const queryParams = new URLSearchParams();\n      \n        if (selectedGenre.length > 0) {\n          queryParams.set('selectedGenre', selectedGenre.join(','));\n        }\n      \n        if (selectedRating !== null) {\n          if (selectedAscending) {\n            queryParams.set('sorts[rating]', 'asc');\n          } else {\n            queryParams.set('sorts[rating]', 'desc');\n          }\n        }\n      \n        const queryString = queryParams.toString();\n      \n        if (queryString) {\n          history.push({ search: queryString });\n        } else {\n          history.push({ search: '' }); // This line removes the query string\n        }\n      \n        localStorage.setItem('selectedGenre', JSON.stringify(selectedGenre));\n        localStorage.setItem('selectedRating', JSON.stringify(selectedRating));\n        localStorage.setItem('selectedAscending', JSON.stringify(selectedAscending));\n      }, [selectedGenre, selectedRating, selectedAscending, history]);\n      \n\n      //filterByGenre\n      const handleGenreChange = (value) => {\n        if (selectedGenre && selectedGenre.includes(value)) {\n          setSelectedGenre(selectedGenre.filter((i) => i !== value));\n        } else {\n          setSelectedGenre([...selectedGenre, value]);\n        }\n      };\n\n      \n\n    //lowestSorting\n    const handleRatingChange = (value) => {\n      setSelectedRating(value === selectedRating ? null : value);\n    };\n    \n\n    //highestSorting\n      const handleAscendingChange = (value) => {\n        setSelectedAscending(value);\n      };\n\n\n //filteringAndSorting\n    const filterMovies = movieData\n    .filter(\n      (movie) =>\n        !selectedGenre.length ||\n        movie.categories.findIndex((cat) => selectedGenre.includes(cat.title_en)) !== -1\n    )\n    .sort((a, b) => {\n      if (selectedRating === 'descending') {\n        return a.rate_avrage - b.rate_avrage;\n      } else if (selectedRating === 'ascending') {\n        return b.rate_avrage - a.rate_avrage;\n      } else {\n     \n        return 0;\n      }\n    });\n\n   \n    return (\n        <>\n\n\n            <div className={styles.container}>\n                \n                <img className={styles.banner} src={banner} />\n                <div className={styles.filtercontainer}>\n\n                  <div >\n                    <Category \n                     selectedGenre={selectedGenre} \n                     onGenreChange={handleGenreChange}\n                      />\n               </div>\n  \n\n                 <div>\n                 <Rate\n                       selectedRating={selectedRating}\n                       onRatingChange={handleRatingChange}\n                   />               \n                 </div>\n\n               </div>\n              \n\n                <Cards\n                    movies={filterMovies}\n                    selectedGenre={selectedGenre}\n                    selectedRating={selectedRating}\n                    setSelectedAscending={setSelectedAscending}\n                    selectedAscending={selectedAscending}\n\n                />\n            </div>\n\n\n        </>\n    );\n};\n\nexport default Home;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}